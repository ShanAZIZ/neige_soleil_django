# Generated by Django 3.1.4 on 2021-03-30 20:49

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Utilisateur',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_proprietaire', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='ContratProprietaire',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=200)),
                ('adresse', models.CharField(max_length=200)),
                ('code_postale', models.CharField(max_length=5)),
                ('ville', models.CharField(max_length=200)),
                ('description', models.TextField(max_length=1000)),
                ('type', models.CharField(choices=[('F1', 'F1'), ('F2', 'F2'), ('F3', 'F3'), ('F4', 'F4'), ('F5', 'F5')], max_length=2)),
                ('exposition', models.CharField(choices=[('Sud', 'Sud'), ('Nord', 'Nord'), ('Nord-est', 'Nord-est'), ('Nord-ouest', 'Nord-ouest'), ('Sud-est', 'Sud-est'), ('Sud-ouest', 'Sud-ouest'), ('Est', 'Est'), ('Ouest', 'Ouest')], max_length=10)),
                ('surface_habitable', models.FloatField()),
                ('surface_balcon', models.FloatField()),
                ('capacite', models.IntegerField()),
                ('distance_pistes', models.FloatField()),
                ('status', models.CharField(choices=[('CHECK', 'Attente de Validation'), ('AVAIL', 'Actif'), ('EXPIRED', 'Expir√©')], default='CHECK', max_length=7)),
                ('prix_saison_haute', models.FloatField()),
                ('prix_saison_moyenne', models.FloatField()),
                ('prix_saison_basse', models.FloatField()),
                ('date_debut', models.DateField()),
                ('date_fin', models.DateField()),
                ('date_creation', models.DateField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Reservation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_reservation', models.DateField(auto_now_add=True)),
                ('date_debut_sejour', models.DateField()),
                ('date_fin_sejour', models.DateField()),
                ('status_reservation', models.CharField(choices=[('WAIT', 'En cours'), ('LOCATION', 'Location'), ('CANCEL', 'Annuler')], default='WAIT', max_length=8)),
                ('propriete', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='neige_soleil_app.contratproprietaire')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ProprieteImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, null=True, upload_to='')),
                ('propriete', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='neige_soleil_app.contratproprietaire')),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('adresse', models.CharField(max_length=200)),
                ('code_postale', models.CharField(max_length=5)),
                ('ville', models.CharField(max_length=200)),
                ('telephone', models.IntegerField()),
                ('rib', models.CharField(max_length=50)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_confirmation', models.DateField(auto_now_add=True)),
                ('reservation', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='neige_soleil_app.reservation')),
            ],
        ),
    ]
